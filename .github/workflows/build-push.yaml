name: build-push

on:
  push:
    branches:
      - main
  workflow_dispatch:

# permission can be added at job level or workflows level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
  packages: write # push to GHCR

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [github-issue-opener, slack-webhook]

    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0

      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: '1.20'
          check-latest: true

      - run: go version

      - name: Install Cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # v3.0.1

      - name: Cosign login
        shell: bash
        run: |
          cosign login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.6

      - name: ko login
        shell: bash
        run: |
          ko login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          KO_DOCKER_REPO: ghcr.io/chainguard-dev/${{matrix.image}}
        run: |
          cd ${{matrix.image}}/cmd/app

          ko build --image-refs=ko.images --bare .

          echo "KO build $(cat ko.images)"

      - name: Signing
        env:
          COSIGN_YES: true
        run: |
          echo "Signing $(cat ${{matrix.image}}/cmd/app/ko.images)"

          cosign sign "$(cat ${{matrix.image}}/cmd/app/ko.images)"

      - name: Sbom Attest
        env:
          COSIGN_YES: true
        run: |
          cosign download sbom "$(cat ${{matrix.image}}/cmd/app/ko.images)"  --output-file bom.spdx.json

          cosign attest --timeout=0 --type spdxjson --predicate bom.spdx.json "$(cat ${{matrix.image}}/cmd/app/ko.images)"

          cosign verify-attestation --type spdxjson \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            --certificate-identity "https://github.com/chainguard-dev/enforce-events/.github/workflows/build-push.yaml@refs/heads/main" \
            "$(cat ${{matrix.image}}/cmd/app/ko.images)"
